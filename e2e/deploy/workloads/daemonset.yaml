apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: reloader-test-daemonset
spec:
  # replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reloader-test-daemonset
  template:
    metadata:
      labels:
        app.kubernetes.io/name: reloader-test-daemonset
      annotations:
        secrets-webhook.security.bank-vaults.io/provider: "vault"
        secrets-webhook.security.bank-vaults.io/vault-addr: "https://vault:8200"
        secrets-webhook.security.bank-vaults.io/vault-tls-secret: vault-tls
        secrets-reloader.security.bank-vaults.io/reload-on-secret-change: "true"
    spec:
      initContainers:
        - name: init-ubuntu
          image: ubuntu
          command:
            - "sh"
            - "-c"
            - "echo $AWS_SECRET_ACCESS_KEY && echo $DOCKER_REPO_PASSWORD && echo initContainers ready"
          env:
            - name: AWS_SECRET_ACCESS_KEY
              value: vault:secret/data/accounts/aws#AWS_SECRET_ACCESS_KEY
            - name: DOCKER_REPO_PASSWORD
              value: vault:secret/data/dockerrepo#${.DOCKER_REPO_PASSWORD}
          resources:
            limits:
              memory: "128Mi"
              cpu: "100m"
      containers:
        - name: alpine
          image: alpine
          command:
            - "sh"
            - "-c"
            - "echo $AWS_SECRET_ACCESS_KEY && echo $DOCKER_REPO_PASSWORD && echo going to sleep... && sleep 10000"
          env:
            - name: AWS_SECRET_ACCESS_KEY
              value: vault:secret/data/accounts/aws#AWS_SECRET_ACCESS_KEY
            - name: DOCKER_REPO_PASSWORD
              value: vault:secret/data/dockerrepo#${.DOCKER_REPO_PASSWORD}
          resources:
            limits:
              memory: "128Mi"
              cpu: "100m"
